name: Unit Tests

# Compile MET and run unit tests
# for pull requests into develop branch

on:
  pull_request:
    types: [opened, reopened]
    branches:
      - develop
  push:
    branches:
      - 'feature_1546_ci_testing'

jobs:

  unit_test:
    name: Run MET Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get branch name
        id: get_branch_name
        run: .github/jobs/get_branch_name.sh

      - name: Set job controls
        id: job_status
        run: .github/jobs/set_job_controls.sh
        env:
          commit_msg: ${{ github.event.head_commit.message }}

      - name: Create directories to store output
        run: |
          mkdir -p ${{ runner.workspace }}/logs
          mkdir -p ${{ runner.workspace }}/diff

      - name: Compile MET in Docker
        run: .github/jobs/build_docker_image.sh
        if: ${{ steps.job_status.outputs.run_compile == 'true' }}
        env:
          SOURCE_BRANCH: ${{ steps.get_branch_name.outputs.branch_name }}
          MET_BASE_IMAGE: unit_test

      - name: Copy Docker build log into logs directory
        if: ${{ always() && steps.job_status.outputs.run_compile == 'true' }}
        run: cp ${GITHUB_WORKSPACE}/docker_build.log ${RUNNER_WORKSPACE}/logs/

      - name: Get test data from DockerHub
        run: .github/jobs/get_test_data.sh

      - name: Run Unit Tests in Docker
        run: .github/jobs/run_unit_docker.sh
        env:
          SOURCE_BRANCH: ${{ steps.get_branch_name.outputs.branch_name }}

      - name: Upload diff files as artifact
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: diff
          path: ${{ runner.workspace }}/diff
          if-no-files-found: ignore

      - name: Upload logs as artifact
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: ${{ runner.workspace }}/logs
          if-no-files-found: ignore
